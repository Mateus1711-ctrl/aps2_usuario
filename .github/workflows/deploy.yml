name: Deploy Usuário

on:
  push:
    branches: [ "main" ]
    
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build com Maven
        run: mvn -B package --file pom.xml

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: "mateus1711"
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build e push da imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: mateus1711/usuario-ci:${{ github.sha }}

      - name: Deploy via SSH na AWS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST_TEST }}
          username: "ubuntu"
          key: ${{ secrets.KEY_TEST }}
          port: 22
          script: |
            # Garante que a rede "rede" exista
            docker network ls | grep rede || docker network create rede
            # Para e remove o container antigo, se existir
            docker stop usuario || true
            docker rm --force usuario || true
            # Inicia o novo container mapeando a porta 8080
            docker run -d -p 8080:8080 --name usuario --network=rede mateus1711/usuario-ci:${{ github.sha }}
